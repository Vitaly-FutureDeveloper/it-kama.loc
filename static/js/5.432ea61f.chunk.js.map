{"version":3,"sources":["components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","element","hasError","className","s","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","undefined","maxLenghtCreator","maxLenght","ERR_MSG","length","DialogItem","path","id","dialog","active","to","Message","massage","message","maxLenght50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","action","addMessageCreator","withAuthRedirect"],"mappings":"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","file":"static/js/5.432ea61f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__32uWb\",\"error\":\"FormsControls_error__3Jep2\",\"formSummaryError\":\"FormsControls_formSummaryError__2nVCF\"};","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, element, children}) => {\r\n\tconst hasError = error && touched;\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + s.error}>\r\n\t\t\t<div>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t\t{ hasError && <span>{error}</span> }\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n\tconst {input, meta, child, ...restProps} = props;\r\n\treturn (\r\n\t\t<FormControl {...props} >\r\n\t\t\t<input {...restProps} {...input} />\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport const Input = (props) => {\r\n\tconst {input, meta, child, ...restProps} = props;\r\n\treturn (\r\n\t\t<FormControl {...props}>\r\n\t\t\t<input {...restProps} {...input} />\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props= {}, text=\"\") => (\r\n\t\t<div>\r\n\t\t\t\t<Field name={name}\r\n\t\t\t\t\t\t\t\t\t\t validate={validators}\r\n\t\t\t\t\t\t\t\t\t\t placeholder={placeholder}\r\n\t\t\t\t\t\t\t\t\t\t component={component} {...props} /> {text}\r\n\t\t</div>\r\n);","export const required = (value) => {\r\n\tconst ERR_MSG = \"Поле не должно быть пустым\";\r\n\treturn value ? undefined : ERR_MSG;\r\n};\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n\tconst ERR_MSG = `Поле должно содержать максимум ${maxLenght} символов`;\r\n\treturn (value.length <= maxLenght) ? undefined : ERR_MSG;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2EZ-5\",\"dialogsItems\":\"Dialogs_dialogsItems__2kr04\",\"active\":\"Dialogs_active__2OFE6\",\"dialog\":\"Dialogs_dialog__3At04\",\"messages\":\"Dialogs_messages__3IHp5\",\"massage\":\"Dialogs_massage__3DzzC\"};","import s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\tconst path = \"/dialogs/\" + props.id;\r\n\tconst name = props.name;\r\n\r\n\treturn (\r\n\t\t<div className={s.dialog + ' ' + s.active}>\r\n\t\t\t<NavLink to={path}>\r\n\t\t\t\t{name}\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default DialogItem;","import s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={s.massage}>{props.message}</div>\r\n\t);\r\n};\r\n\r\nexport default Message;","import * as React from 'react';\r\n\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLenghtCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\tconst state = props.dialogsPage;\r\n\r\n\tconst addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n\t};\r\n\r\n\tconst dialogsElements = state.dialogs\r\n\t\t.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n\r\n\tconst messagesElements = state.messages\r\n\t\t.map(m => <Message message={m.name} key={m.id} id={m.id} />);\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t{messagesElements}\r\n\t\t\t</div>\r\n\r\n\t\t\t<AddMessageFormRedux onSubmit={addNewMessage} />\r\n\t\t\t{/*Form*/}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nconst maxLenght50 = maxLenghtCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div className=\"form-block\">\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<Field component={Textarea}\r\n\t\t\t\t\t\t\t\t validate={[required, maxLenght50]}\r\n\t\t\t\t\t\t\t\t name=\"newMessageBody\"\r\n\t\t\t\t\t\t\t\t placeholder=\"Введите своё сообщение\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<button>Отправить</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import * as React from 'react';\r\n\r\nimport {addMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tconst action = addMessageCreator(newMessageBody);\r\n\t\t\tdispatch(action);\r\n\t\t},\r\n\t};\r\n};\r\n\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}