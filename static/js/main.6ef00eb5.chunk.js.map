{"version":3,"sources":["components/Users/users.module.css","api/ProfileAPI.ts","redux/profile-reducer.ts","redux/dialogs-reducer.ts","assets/img/im.png","components/common/spinners/SpinHypnotic.tsx","api/api.ts","components/common/spinners/spinner.module.css","components/common/spinners/SpinHypnotic.module.css","reportWebVitals.js","redux/sidebar-reducer.ts","api/UsersAPI.ts","utils/object-helper.ts","redux/users-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","hoc/withSuspense.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/News/News.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","redux/users-selectors.ts","components/Users/UsersSearcheForm/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx","redux/auth-selectors.ts","components/Header/Header.tsx","App.tsx","index.tsx","components/common/Paginator/Paginator.module.css","components/common/spinners/spinner.tsx","api/SecurityAPI.ts","api/AuthAPI.ts","redux/auth-reducer.ts"],"names":["module","exports","ProfileAPI","userId","instance","get","then","response","data","status","put","photoFile","formData","FormData","append","headers","profile","initialState","posts","id","message","likeCount","actions","addPostCreator","newPostText","type","deletePost","postId","setUsersProfile","setStatus","savePhotoSuccess","photos","getProfile","dispatch","a","getStatus","updateStatus","resultCode","ResultCodesEnum","Success","savePhoto","file","saveProfile","getState","auth","Error","messages","length","action","stopSubmit","_error","Promise","reject","profileReducer","state","newPost","likesCount","filter","p","dialogs","name","sendMessage","newMessageBody","dialogsReducer","SpinHypnotic","className","s","hypnotic","axios","create","withCredentials","baseURL","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","friends","sidebarReducer","usersAPI","getUsers","currentPage","pageSize","term","friend","follow","post","unfollow","delete","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","payload","count","getUsersThunkCreator","totalCount","usersReducer","followed","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","authReducer","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","WrappedComponent","props","Suspense","fallback","Music","Settings","News","Paginator","totalItemsCount","onPageChanged","x","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","disabledBtnBefore","disabledBtnNext","pagination","paginationBtn","paginationBtn_prev","onClick","disabled","paginationList","cn","paginationList_item__active","paginationList_item","e","paginationBtn_next","User","user","to","usersPhoto","src","small","userPhoto","btnUnFollow","some","btnFollow","createSelector","getPageSize","getTotalItemsCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","usersSearchFormValidate","values","UsersSearchForm","onFilterChanged","useSelector","enableReinitialize","initialValues","String","validate","onSubmit","setSubmitting","isSubmitting","component","as","value","React","memo","Users","useDispatch","history","useHistory","useEffect","parsed","querystring","location","search","substr","actualPage","actualFilter","page","Number","query","pathname","pageNumber","UsersPage","pageTitle","selectIsAuth","isAuth","selectCurrentUserLogin","login","AppHeader","items1","item","key","label","Header","Layout","span","theme","mode","defaultSelectedKeys","alt","style","backgroundColor","verticalAlign","icon","UserOutlined","size","title","logout","ghost","DialogsContainer","lazy","ProfileContainer","LoginPage","App","catchAllUnhandledErrors","alert","this","initializeApp","addEventListener","removeEventListener","Content","Footer","Sider","navLabels","items2","index","createElement","children","j","padding","margin","Item","width","defaultOpenKeys","height","minHeight","exact","path","render","textAlign","Component","AppContainer","withRouter","connect","promise","getAuthUserData","all","SamuraiJSApp","ReactDOM","StrictMode","document","getElementById","Spinner","lds_ellipsis","securityAPI","authAPI","email","password","rememberMe","captcha","body","captchaUrl","meData","captchaErrorOccured","getCaptchaUrl","url"],"mappings":"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","file":"static/js/main.6ef00eb5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"users_usersPhoto__289IM\",\"btnUnFollow\":\"users_btnUnFollow__1qQFC\",\"btnFollow\":\"users_btnFollow__2qZPG\"};","import {instance, ResponseType} from \"./api\";\r\nimport {PhotosType, ProfileType} from \"../types/types\";\r\n\r\ntype SavePhotoResponseDataType = {\r\n\tphotos: PhotosType,\r\n}\r\nexport const ProfileAPI = {\r\n    getProfile(userId: number = 2) {\r\n        return instance.get<ProfileType>(`/profile/${userId}`).then(response => response.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`).then(response => response.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<ResponseType>(`profile/status`, {status}).then(response => response.data);\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put<ResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        }).then(response => response.data);\r\n    },\r\n\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<ResponseType>(`profile`, profile).then(response => response.data);\r\n    },\r\n};","import {FormAction, stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {ProfileAPI} from \"../api/ProfileAPI\";\r\nimport {ResultCodesEnum} from \"../api/api\";\r\n\r\n\r\nexport const initialState = {\r\n\tposts : [\r\n\t\t{id: 1, message: \"How are you?\", likeCount: 15},\r\n\t\t{id: 2, message: \"Хаваю, хаваю!\", likeCount: 15},\r\n\t\t{id: 3, message: \"It's my first post\", likeCount: 55},\r\n\t] as Array<PostType>,\r\n\tprofile: null as ProfileType | null,\r\n\tstatus: \"\",\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof actions>;\r\nexport type ThunkType = BaseThunkType<ActionsTypes | FormAction>;\r\n\r\nconst profileReducer = (state=initialState, action:ActionsTypes):InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase \"SN/PROFILE/ADD-POST\": {\r\n\t\t\tconst newPost = {\r\n\t\t\t\tid: 5,\r\n\t\t\t\tmessage: action.newPostText,\r\n\t\t\t\tlikesCount: 0,\r\n\t\t\t};\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts : [newPost, ...state.posts] as Array<PostType>,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tcase \"SN/PROFILE/DELETE_POST\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tposts: state.posts.filter(p => p.id !== action.postId)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase \"SN/PROFILE/SET_USER_PROFILE\":\r\n\t\t\treturn {...state, profile: action.profile}\r\n\r\n\t\tcase \"SN/PROFILE/SET_STATUS\":\r\n\t\t\treturn {...state, profile: {...state.profile, status: action.status} as ProfileType}\r\n\r\n\t\tcase \"SN/PROFILE/SET_PHOTO\":\r\n\t\t\treturn {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nexport const actions = {\r\n\taddPostCreator : (newPostText:string) => ({ type: \"SN/PROFILE/ADD-POST\", newPostText } as const ),\r\n\tdeletePost : (postId:number) => ({ type: \"SN/PROFILE/DELETE_POST\", postId } as const ),\r\n\tsetUsersProfile : (profile:ProfileType) => ({ type: \"SN/PROFILE/SET_USER_PROFILE\", profile } as const ),\r\n\tsetStatus : (status:string) => ({\r\n\t\ttype: \"SN/PROFILE/SET_STATUS\",\r\n\t\tstatus,\r\n\t} as const ),\r\n\tsavePhotoSuccess : (photos:PhotosType) => ({\r\n\t\ttype: \"SN/PROFILE/SET_PHOTO\",\r\n\t\tphotos,\r\n\t} as const ),\r\n};\r\n\r\n\r\n\r\nexport const getProfile = (userId:number):ThunkType => async (dispatch) => {\r\n\tconst data = await ProfileAPI.getProfile(userId);\r\n\r\n\tdispatch(actions.setUsersProfile(data));\r\n};\r\n\r\nexport const getStatus = (status:number):ThunkType => async (dispatch) => {\r\n\tconst data = await ProfileAPI.getStatus(status);\r\n\r\n\tdispatch(actions.setStatus(data));\r\n};\r\n\r\nexport const updateStatus = (status:string):ThunkType => async (dispatch) => {\r\n\ttry {\r\n\t\tconst data = await ProfileAPI.updateStatus(status);\r\n\r\n\t\tif (data.resultCode === ResultCodesEnum.Success) {\r\n\t\t\tdispatch(actions.setStatus(status));\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tthrow e\r\n\t}\r\n};\r\n\r\nexport const savePhoto = (file:File):ThunkType => async (dispatch) => {\r\n\tconst data = await ProfileAPI.savePhoto(file);\r\n\r\n\tif (data.resultCode === ResultCodesEnum.Success) {\r\n\t\tdispatch(actions.savePhotoSuccess(data.data.photos));\r\n\t}\r\n};\r\n\r\nexport const saveProfile = (profile:ProfileType):ThunkType => async (dispatch, getState) => {\r\n\tconst userId:any = getState().auth.userId;\r\n\tconst data = await ProfileAPI.saveProfile(profile);\r\n\r\n\tif (data.resultCode === ResultCodesEnum.Success) {\r\n\r\n\t\tif(userId !== null) {\r\n\t\t\tdispatch(actions.setUsersProfile(userId));\r\n\t\t}else {\r\n\t\t\tthrow new Error('userId не может быть null');\r\n\t\t}\r\n\r\n\t} else {\r\n\t\t// stopSubmit - для обработки ошибок\r\n\t\tconst message = data.messages.length > 0 ? data.messages[0] : \"какая-то ошибка\";\r\n\t\tconst action = stopSubmit(\"edit-profile\", {_error: message});\r\n\r\n\t\tdispatch(action);\r\n\t\treturn Promise.reject(message);\r\n\t}\r\n};\r\n\r\nexport default profileReducer;","import {InferActionsTypes} from \"./redux-store\";\r\n\r\ntype DialogsType = {\r\n\tid: number,\r\n\tname: string,\r\n};\r\ntype MessagesType = {\r\n\tid: number,\r\n\tmessage: string,\r\n};\r\n\r\nconst initialState = {\r\n\tdialogs: [\r\n\t\t{id: 1, name: \"Dima\",},\r\n\t\t{id: 2, name: \"Lesha\",},\r\n\t\t{id: 3, name: \"Masha\",},\r\n\t\t{id: 4, name: \"Lena\",},\r\n\t\t{id: 5, name: \"Pasha\",},\r\n\t\t{id: 6, name: \"Dasha\",},\r\n\t] as Array<DialogsType>,\r\n\tmessages: [\r\n\t\t{id: 1, message: \"How are you?\",},\r\n\t\t{id: 2, message: \"Yuo mmen\",},\r\n\t\t{id: 3, message: \"Hi\",},\r\n\t] as Array<MessagesType>,\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n// type ThunkType = BaseThunkType<ActionsTypes>;\r\n\r\nconst dialogsReducer = (state=initialState, action:ActionsTypes):InitialStateType => {\r\n\tswitch (action.type){\r\n\t\tcase \"SN/DIALOGS/ADD-MESSAGE\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessages : [...state.messages, {id: 5, message: action.newMessageBody}]\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport const actions = {\r\n\tsendMessage : (newMessageBody:string) => ({\r\n\t\ttype: \"SN/DIALOGS/ADD-MESSAGE\",\r\n\t\tnewMessageBody\r\n\t} as const ),\r\n};\r\n\r\nexport default dialogsReducer;","export default __webpack_public_path__ + \"static/media/im.05338168.png\";","import React from \"react\";\r\nimport s from \"./SpinHypnotic.module.css\";\r\n\r\n\r\n\r\nconst SpinHypnotic:React.FC = () => {\r\n\treturn <div className={s.hypnotic}></div>\r\n};\r\n\r\nexport default SpinHypnotic;","import axios from \"axios\";\r\nimport {UsersType} from \"../types/types\";\r\n\r\nconst BASE_URL = \"https://social-network.samuraijs.com/api/1.0\";\r\nconst API_KEY = \"bbd368cb-cbd4-49df-b254-fdd056ac38e7\";\r\n\r\nexport const instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: BASE_URL,\r\n\theaders: {\r\n\t\t\"API-KEY\": API_KEY\r\n\t}\r\n});\r\n\r\n\r\n\r\nexport enum ResultCodesEnum {\r\n\tSuccess = 0,\r\n\tError = 1,\r\n\tcaptchaErrorOccured = 10,\r\n};\r\n\r\n\r\nexport type GetItemsType = {\r\n\titems: Array<UsersType>,\r\n\ttotalCount:number,\r\n\terror: string | null\r\n};\r\n\r\nexport type ResponseType<D = {}, RC = ResultCodesEnum> = {\r\n\tdata: D,\r\n\tmessages:Array<string>,\r\n\tresultCode:RC,\r\n};\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds_ellipsis\":\"spinner_lds_ellipsis__bpiGC\",\"lds_ellipsis1\":\"spinner_lds_ellipsis1__2hBbP\",\"lds_ellipsis2\":\"spinner_lds_ellipsis2__8a04T\",\"lds_ellipsis3\":\"spinner_lds_ellipsis3__3rE2v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hypnotic\":\"SpinHypnotic_hypnotic__YRtKP\",\"hypnotic-k788tl\":\"SpinHypnotic_hypnotic-k788tl__24F-S\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export type FriendsType = {\r\n\tid:number,\r\n\tname:string,\r\n};\r\nconst initialState = {\r\n\tfriends : [\r\n\t\t{id: 1, name: \"Саня\",},\r\n\t\t{id: 2, name: \"Алекс\",},\r\n\t\t{id: 3, name: \"Шурик\",},\r\n\t] as Array<FriendsType>,\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\nconst sidebarReducer = (state=initialState, action:any):InitialStateType => {\r\n\r\n\treturn state;\r\n}\r\n\r\nexport default sidebarReducer;","import {GetItemsType, instance, ResponseType} from \"./api\";\r\n\r\n\r\nexport const usersAPI = {\r\n\tgetUsers (currentPage:number=1, pageSize:number=0, term:string=\"\", friend:null|boolean=null) {\r\n\t\treturn instance.get<GetItemsType>(`/users?page=${currentPage}&count=${pageSize}&term=${term}` + (friend === null ? \"\" : `&friend=${friend}`))\r\n\t\t\t.then(response => response.data);\r\n\t},\r\n\tfollow(userId:number){\r\n\t\treturn instance.post<ResponseType>(`/follow/${userId}`).then(response => response.data);\r\n\t},\r\n\tunfollow(userId:number){\r\n\t\treturn instance.delete(`/follow/${userId}`).then(response => response.data) as Promise<ResponseType>;\r\n\t},\r\n};","export const updateObjectInArray = (items:any, itemId:any, objPropName:any, newObjProps:any) => {\r\n\treturn items.map((u:any) => {\r\n\t\tif (u[objPropName] === itemId) {\r\n\t\t\treturn {...u, ...newObjProps};\r\n\t\t}\r\n\t\treturn u;\r\n\t})\r\n};","import {Dispatch} from \"redux\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {usersAPI} from \"../api/UsersAPI\";\r\n\r\nimport {updateObjectInArray} from \"../utils/object-helper\";\r\nimport {UsersType} from \"../types/types\";\r\nimport {ResponseType} from \"../api/api\";\r\n\r\n\r\nexport const initialState = {\r\n\tusers : [] as Array<UsersType>,\r\n\tpageSize: 50,\r\n\ttotalUsersCount: 0,\r\n\tcurrentPage: 1,\r\n\tisFetching: false,\r\n\tfollowingInProgress: [] as Array<number>, // array of users ids\r\n\tfilter: {\r\n\t\tterm: \"\",\r\n\t\tfriend: null as null | boolean,\r\n\t},\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\nexport type FilterType = typeof initialState.filter;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsTypes>;\r\n\r\nconst usersReducer = (state=initialState, action:ActionsTypes):InitialStateType => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase \"SN/USERS/FOLLOW\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n\t\t\t};\r\n\r\n\t\tcase \"SN/USERS/UNFOLLOW\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tusers: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n\t\t\t};\r\n\r\n\t\tcase \"SN/USERS/SET_USERS\":\r\n\t\t\treturn {...state, users: [...action.users]};\r\n\r\n\t\tcase \"SN/USERS/SET_CURRENT_PAGE\":\r\n\t\t\treturn {...state, currentPage: action.currentPage};\r\n\r\n\t\tcase \"SN/USERS/SET_FILTER\":\r\n\t\t\treturn {...state, filter: action.payload}\r\n\r\n\t\tcase \"SN/USERS/SET_TOTAL_USERS_COUNT\":\r\n\t\t\treturn {...state, totalUsersCount: action.count};\r\n\r\n\t\tcase \"SN/USERS/TOGGLE_IS_FETCHING\":\r\n\t\t\treturn {...state, isFetching: action.isFetching};\r\n\r\n\t\tcase \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfollowingInProgress: action.isFetching ?\r\n\t\t\t\t\t[...state.followingInProgress, action.userId]\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\tstate.followingInProgress.filter(id => id != action.userId),\r\n\t\t\t};\r\n\r\n\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nexport const actions = {\r\n\tfollowSuccess: (userId:number) => ({ type: 'SN/USERS/FOLLOW', userId} as const),\r\n\tunfollowSuccess: (userId:number) => ({ type: 'SN/USERS/UNFOLLOW', userId } as const),\r\n\tsetUsers: (users:Array<UsersType>) => ({ type: 'SN/USERS/SET_USERS', users } as const),\r\n\tsetCurrentPage: (currentPage:number) => ({ type: 'SN/USERS/SET_CURRENT_PAGE', currentPage } as const),\r\n\tsetFilter: (filter:FilterType) => ({ type: 'SN/USERS/SET_FILTER', payload: filter } as const),\r\n\tsetTotalUsersCount: (totalUsersCount:number) => ({ type: 'SN/USERS/SET_TOTAL_USERS_COUNT', count: totalUsersCount } as const),\r\n\ttoggleIsFetching: (isFetching:boolean) => ({ type: 'SN/USERS/TOGGLE_IS_FETCHING', isFetching  } as const),\r\n\ttogglefollowingProgress: (isFetching:boolean, userId:number) => ({\r\n\t\ttype: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n\t\tisFetching,\r\n\t\tuserId,\r\n\t} as const),\r\n};\r\n\r\nexport type DispatchType = Dispatch<ActionsTypes>;\r\n\r\n\r\n\r\nexport const getUsersThunkCreator = (currentPage:number, pageSize:number, filter:FilterType):ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tdispatch(actions.toggleIsFetching(true));\r\n\t\tdispatch(actions.setCurrentPage(currentPage));\r\n\t\tdispatch(actions.setFilter(filter));\r\n\r\n\t\tconst data = await usersAPI.getUsers(currentPage, pageSize, filter.term, filter.friend);\r\n\r\n\t\tdispatch(actions.setUsers(data.items));\r\n\t\tdispatch(actions.setTotalUsersCount(data.totalCount));\r\n\t\tdispatch(actions.toggleIsFetching(false));\r\n\t}\r\n};\r\n\r\nconst _followUnfollowToggle = async ( dispatch:DispatchType,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t userId:number,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t apiMethod: (userId:number) => Promise<ResponseType>,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t actionCreator: (userID:number) => ActionsTypes ) => {\r\n\tdispatch(actions.togglefollowingProgress(true, userId));\r\n\r\n\tconst data = await apiMethod(userId);\r\n\r\n\tif (data.resultCode === 0) {\r\n\t\tdispatch(actionCreator(userId));\r\n\t}\r\n\tdispatch(actions.togglefollowingProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId:number):ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tconst apiMethod = usersAPI.follow.bind(usersAPI);\r\n\r\n\t\tawait _followUnfollowToggle(dispatch, userId, apiMethod, actions.followSuccess);\r\n\t}\r\n};\r\n\r\nexport const unfollow = (userId:number):ThunkType => {\r\n\treturn async (dispatch) => {\r\n\t\tconst apiMethod = usersAPI.unfollow.bind(usersAPI);\r\n\r\n\t\tawait _followUnfollowToggle(dispatch, userId, apiMethod, actions.unfollowSuccess);\r\n\t}\r\n};\r\n\r\nexport default usersReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"./redux-store\";\r\n\r\n\r\nconst initialState = {\r\n\tinitialized: false,\r\n};\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst appReducer = (state=initialState, action:ActionTypes): InitialStateType => {\r\n\r\n\tswitch (action.type){\r\n\t\tcase \"SN/APP/INITIALIZED_SUCCESS\": {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tinitialized: true,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\r\n};\r\n\r\n\r\ntype ActionTypes = InferActionsTypes<typeof actions>;;\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionTypes>;\r\n\r\n\r\nexport const actions = {\r\n\tinitializedSuccess: () => ({ type: \"SN/APP/INITIALIZED_SUCCESS\" } as const ),\r\n};\r\n\r\n\r\nexport const initializeApp = ():ThunkType => {\r\n\treturn (dispatch) => {\r\n\t\tconst promise = dispatch(getAuthUserData());\r\n\r\n\t\tPromise.all([promise]).then(() => {\r\n\t\t\tdispatch(actions.initializedSuccess());\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n\r\nexport default appReducer;","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n\tprofilePage: profileReducer,\r\n\tdialogsPage: dialogsReducer,\r\n\tsidebar: sidebarReducer,\r\n\tusersPage: usersReducer,\r\n\tauth: authReducer,\r\n\tform: formReducer,\r\n\tapp: appReducer,\r\n});\r\n\r\ntype RootReducerType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never;\r\n// export type InferActionsTypes<T extends {[key: string]: (...args: any[])=>any}> = ReturnType<PropertiesTypes<T>>;\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never;\r\n\r\nexport type BaseThunkType<A extends Action, R=Promise<void>> = ThunkAction<R, AppStateType, unknown, A>;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n\t\tapplyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport Spinner from \"../components/common/spinners/spinner\";\r\n\r\n\r\nexport function withSuspense <WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\r\n\treturn (props:WCP) => {\r\n\t\treturn <React.Suspense fallback={<Spinner/>}>\r\n\t\t\t<WrappedComponent {...props} />\r\n\t\t</React.Suspense>\r\n\t};\r\n};","import React from \"react\";\r\nimport s from './Music.module.css';\r\n\r\nconst Music:React.FC = () => {\r\n\treturn(\r\n\t\t<div >\r\n\t\t\tMusic\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\nconst Settings: React.FC = () => {\r\n\treturn(\r\n\t\t<div >\r\n\t\t\tSettings\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\n\r\nconst News:React.FC = () => {\r\n\treturn(\r\n\t\t<div >\r\n\t\t\tNews\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default News;","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css';\r\nimport cn from 'classnames';\r\n\r\n\r\ntype PropsType = {\r\n\ttotalItemsCount:number,\r\n\tpageSize:number,\r\n\tcurrentPage?:number,\r\n\tonPageChanged?:(pageNumber:number)=>void,\r\n\tportionSize?:number,\r\n};\r\nconst Paginator:React.FC<PropsType> = ({totalItemsCount,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t pageSize,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t currentPage,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t onPageChanged = (x) => x,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t portionSize=10}) => {\r\n\r\n\tconst pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\tconst pages:Array<number> = [];\r\n\tfor (let i = 1; i <= pagesCount; i++){\r\n\t\tpages.push(i);\r\n\t}\r\n\r\n\tconst portionCount = Math.ceil(pagesCount / portionSize);\r\n\tconst [portionNumber, setPortionNumber] = useState(1);\r\n\r\n\tconst leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n\tconst rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\tconst disabledBtnBefore = !(portionNumber > 1) // ? '' : true;\r\n\tconst disabledBtnNext = !(portionCount > portionNumber) // ? '' : true;\r\n\r\n\treturn (\r\n\t\t<div className={s.pagination}>\r\n\r\n\t\t\t<button className={s.paginationBtn + ' ' + s.paginationBtn_prev}\r\n\t\t\t\t\t\t\tonClick={() => setPortionNumber(portionNumber - 1)}\r\n\t\t\t\t\t\t\tdisabled={disabledBtnBefore} >\r\n\t\t\t</button>\r\n\r\n\t\t\t<ul className={s.paginationList}>\r\n\t\t\t\t{\r\n\t\t\t\t\tpages\r\n\t\t\t\t\t\t.filter( (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n\t\t\t\t\t\t.map( (p) => {\r\n\t\t\t\t\t\treturn <li key={p} className={cn({[s.paginationList_item__active]: (currentPage === p)}, s.paginationList_item)}\r\n\t\t\t\t\t\t\t\t\t\t\t onClick={(e) => {onPageChanged(p)}} >\r\n\t\t\t\t\t\t\t\t\t\t{ p }\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\r\n\t\t\t<button className={s.paginationBtn + ' ' + s.paginationBtn_next}\r\n\t\t\t\t\t\t\tonClick={() => setPortionNumber(portionNumber + 1)}\r\n\t\t\t\t\t\t\tdisabled={disabledBtnNext} >\r\n\t\t\t</button>\r\n\r\n\t\t</div>\r\n\t);\r\n\r\n};\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport s from './users.module.css';\r\nimport userPhoto from '../../assets/img/im.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport cn from \"classnames\";\r\nimport SpinHypnotic from \"../common/spinners/SpinHypnotic\";\r\nimport {UsersType} from \"../../types/types\";\r\n\r\n\r\ntype PropsType = {\r\n\tuser:UsersType,\r\n\tfollowingInProgress:Array<number>,\r\n\tfollow: (userId:number) => void,\r\n\tunfollow: (userId:number) => void,\r\n};\r\nconst User:React.FC<PropsType> = ({user, followingInProgress, follow, unfollow}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<NavLink to={`/Profile/${user.id}`}>\r\n\t\t\t\t\t\t\t{user.photos ?\r\n\t\t\t\t\t\t\t\t<img className={s.usersPhoto} src={ user.photos.small || userPhoto } />\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<SpinHypnotic />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t{ user.followed ?\r\n\r\n\t\t\t\t\t\t\t<button className={cn('btn', s.btnUnFollow)} disabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={ () => {\r\n\t\t\t\t\t\t\t\tunfollow(user.id);\r\n\t\t\t\t\t\t\t}}>Убрать из друзей</button>\r\n\r\n\t\t\t\t\t\t\t:\r\n\r\n\t\t\t\t\t\t\t<button className={cn('btn', s.btnFollow)} disabled={followingInProgress.some(id => id === user.id)}\r\n\t\t\t\t\t\t\t\tonClick={ () => {\r\n\t\t\t\t\t\t\t\t\tfollow(user.id);\r\n\t\t\t\t\t\t\t\t}}>В друзья</button>\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</span>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<div>{user.name}</div>\r\n\t\t\t\t\t\t<div>{user.status}</div>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<div>{\"user.location.city\"}</div>\r\n\t\t\t\t\t\t<div>{\"user.location.country\"}</div>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\r\n\r\n\t);\r\n\r\n};\r\n\r\nexport default User;","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nconst getUsersSelector = (state:AppStateType) => {\r\n\treturn state.usersPage.users;\r\n};\r\nexport const getUsers = createSelector(getUsersSelector,(users) => {\r\n\treturn users && users.filter(u => true);\r\n});\r\n\r\nconst getPageSizeSelector = (state:AppStateType) => {\r\n\treturn state.usersPage.pageSize;\r\n};\r\nexport const getPageSize = createSelector(getPageSizeSelector, (pageSize) =>{\r\n\treturn pageSize;\r\n});\r\n\r\nconst getTotalUsersCountSelector = (state:AppStateType) => {\r\n\treturn state.usersPage.totalUsersCount;\r\n};\r\nexport const getTotalItemsCount = createSelector(getTotalUsersCountSelector, (totalUsersCount) =>{\r\n\treturn totalUsersCount;\r\n});\r\n\r\nconst getCurrentPageSelector = (state:AppStateType) => {\r\n\treturn state.usersPage.currentPage;\r\n};\r\nexport const getCurrentPage = createSelector(getCurrentPageSelector, (currentPage) =>{\r\n\treturn currentPage;\r\n});\r\n\r\nconst getIsFetchingSelector = (state:AppStateType) => {\r\n\treturn state.usersPage.isFetching;\r\n};\r\nexport const getIsFetching = createSelector(getIsFetchingSelector, (isFetching) =>{\r\n\treturn isFetching;\r\n});\r\n\r\nconst getFollowingInProgressSelector = (state:AppStateType) => {\r\n\treturn state.usersPage.followingInProgress;\r\n};\r\nexport const getFollowingInProgress = createSelector(getFollowingInProgressSelector, (followingInProgress) =>{\r\n\treturn followingInProgress;\r\n});\r\n\r\nconst getUsersFilterSelector = (state:AppStateType) => {\r\n\treturn state.usersPage.filter;\r\n};\r\nexport const getUsersFilter = createSelector(getUsersFilterSelector, (filter) =>{\r\n\treturn filter;\r\n});\r\n","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\n\r\nimport {FilterType} from \"../../../redux/users-reducer\";\r\nimport {getUsersFilter} from \"../../../redux/users-selectors\";\r\n\r\nconst usersSearchFormValidate:any = (values: FilterType) => {\r\n\r\n\r\n\r\n\tconst errors = {};\r\n\t// if (!values.email) {\r\n\t// \terrors.email = 'Required';\r\n\t// } else if (\r\n\t// \t!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n\t// ) {\r\n\t// \terrors.email = 'Invalid email address';\r\n\t// }\r\n\treturn errors;\r\n}\r\ntype FriendFormType = \"true\" | \"false\" | \"null\";\r\ntype FormType = {\r\n\tterm:string,\r\n\tfriend: FriendFormType,\r\n};\r\ntype PropsType = {\r\n\tonFilterChanged:(filter:FilterType) => void,\r\n};\r\nconst UsersSearchForm:React.FC<PropsType> = ({onFilterChanged}) => {\r\n\tconst onSubmit = (values: FormType, { setSubmitting }:{setSubmitting:(isSubmitting: boolean) => void}) => {\r\n\t\tconst filter:FilterType = {\r\n\t\t\tterm: values.term,\r\n\t\t\tfriend: values.friend === \"null\" ? null : values.friend === \"true\",\r\n\t\t};\r\n\r\n\t\tonFilterChanged(filter);\r\n\t\tsetSubmitting(false);\r\n\t}\r\n\r\n\tconst filter = useSelector(getUsersFilter);\r\n\r\n\treturn <div>\r\n\t\t<Formik\r\n\t\t\tenableReinitialize\r\n\t\t\tinitialValues={{ term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n\t\t\tvalidate={usersSearchFormValidate}\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t>\r\n\t\t\t{({ isSubmitting }) => (\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Field type=\"text\" name=\"term\" />\r\n\t\t\t\t\t<ErrorMessage name=\"email\" component=\"div\" />\r\n\t\t\t\t\t<Field name=\"friend\" as=\"select\">\r\n\t\t\t\t\t\t<option value=\"null\">Все</option>\r\n\t\t\t\t\t\t<option value=\"true\">В друзьях</option>\r\n\t\t\t\t\t\t<option value=\"false\">Не в друзьях</option>\r\n\t\t\t\t\t</Field>\r\n\t\t\t\t\t<button type=\"submit\" disabled={isSubmitting}>\r\n\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\r\n\t</div>\r\n};\r\n\r\nexport default React.memo(UsersSearchForm);","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport UsersSearchForm from \"./UsersSearcheForm/UsersSearchForm\";\r\nimport {FilterType, getUsersThunkCreator} from \"../../redux/users-reducer\";\r\nimport {\r\n\tgetCurrentPage,\r\n\tgetFollowingInProgress,\r\n\tgetPageSize,\r\n\tgetTotalItemsCount,\r\n\tgetUsers,\r\n\tgetUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as querystring from \"querystring\";\r\n\r\n\r\ntype PropsType = {\r\n\r\n};\r\n\r\ntype QueryParamsType = { term?: string, page?: string, friend?: string };\r\nexport const Users:React.FC<PropsType> = (props) => {\r\n\r\n\tconst users = useSelector(getUsers);\r\n\tconst totalItemsCount = useSelector(getTotalItemsCount);\r\n\tconst currentPage = useSelector(getCurrentPage);\r\n\tconst pageSize = useSelector(getPageSize);\r\n\tconst filter = useSelector(getUsersFilter);\r\n\tconst followingInProgress = useSelector(getFollowingInProgress);\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\t// const {search} = history.location;\r\n\t\tconst parsed = querystring.parse(history.location.search.substr(1)) as QueryParamsType;\r\n\r\n\t\tlet actualPage = currentPage;\r\n\t\tlet actualFilter = filter;\r\n\r\n\t\tif(!!parsed.page) actualPage = Number(parsed.page);\r\n\r\n\t\tif(!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string};\r\n\r\n\t\tswitch (parsed.friend) {\r\n\t\t\tcase \"null\":\r\n\t\t\t\tactualFilter = {...actualFilter, friend: null}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"true\":\r\n\t\t\t\tactualFilter = {...actualFilter, friend: true}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"false\":\r\n\t\t\t\tactualFilter = {...actualFilter, friend: false}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tdispatch(getUsersThunkCreator(actualPage, pageSize, actualFilter));\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst query: QueryParamsType = {};\r\n\r\n\t\tif(!!filter.term) query.term = filter.term;\r\n\t\tif(filter.friend !== null) query.friend = String(filter.friend);\r\n\t\tif(currentPage !== 1) query.page = String(currentPage);\r\n\r\n\t\thistory.push({\r\n\t\t\tpathname: \"/users\",\r\n\t\t\tsearch: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`,\r\n\t\t});\r\n\t}, [filter, currentPage]);\r\n\r\n\tconst onPageChanged = (pageNumber:number) => {\r\n\t\tdispatch(getUsersThunkCreator(pageNumber, pageSize, filter));\r\n\t};\r\n\tconst onFilterChanged = (filter:FilterType) => {\r\n\t\tdispatch(getUsersThunkCreator(1, pageSize, filter));\r\n\t};\r\n\r\n\tconst follow = (userId:number) => {\r\n\t\tdispatch(follow(userId));\r\n\t};\r\n\tconst unfollow = (userId:number) => {\r\n\t\tdispatch(unfollow(userId));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t<UsersSearchForm onFilterChanged={onFilterChanged} />\r\n\r\n\t\t\t<Paginator currentPage={currentPage}\r\n\t\t\t\t\t\t\t\t onPageChanged={onPageChanged}\r\n\t\t\t\t\t\t\t\t totalItemsCount={totalItemsCount}\r\n\t\t\t\t\t\t\t\t pageSize={pageSize} />\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tusers.map((u) => <User user={u}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t followingInProgress={followingInProgress}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t key={u.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t follow={follow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t unfollow={unfollow}\r\n\r\n\t\t\t\t\t/>)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t</div>\r\n\t);\r\n\r\n};","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nimport {Users} from \"./Users\";\r\nimport Spinner from \"../common/spinners/spinner\";\r\nimport {getIsFetching} from \"../../redux/users-selectors\";\r\n\r\n\r\ntype UsersPagePropsType = {\r\n\tpageTitle:string,\r\n};\r\nexport const UsersPage:React.FC<UsersPagePropsType> = (props) => {\r\n\tconst isFetching = useSelector(getIsFetching);\r\n\r\n\treturn <>\r\n\t\t<h2>{props.pageTitle}</h2>\r\n\t\t{isFetching && <Spinner />}\r\n\t\t<Users />\r\n\t</>\r\n};\r\n\r\n\r\n\r\n","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n\r\nexport const selectIsAuth = (state:AppStateType) => {\r\n\treturn state.auth.isAuth;\r\n};\r\n\r\nexport const selectCurrentUserLogin = (state:AppStateType) => {\r\n\treturn state.auth.login;\r\n};\r\n\r\n// export const getUsers = createSelector(selectIsAuth,(isAuth) => {\r\n// \treturn isAuth;\r\n// });\r\n\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {Avatar, Button, Col, Layout, Menu, MenuProps, Row} from \"antd\";\r\nimport {UserOutlined} from '@ant-design/icons';\r\n\r\nimport {selectCurrentUserLogin, selectIsAuth} from \"../../redux/auth-selectors\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nconst AppHeader:React.FC = () => {\r\n\r\n\tconst isAuth = useSelector(selectIsAuth);\r\n\tconst login = useSelector(selectCurrentUserLogin);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst logoutCallback = () => {\r\n\t\tdispatch(logout());\r\n\t};\r\n\r\n\r\n\tconst items1: MenuProps['items'] = [() => <Link to=\"/Users\">Developers</Link>].map((item, i) => {\r\n\t\tconst subKey = 4 * i + 1;\r\n\t\treturn {\r\n\t\t\tkey: subKey,\r\n\t\t\tlabel: item(),\r\n\t\t};\r\n\t});\r\n\r\n\tconst { Header } = Layout;\r\n\r\n\treturn (\r\n\t\t<Header className=\"header\">\r\n\t\t\t<div className=\"logo\" />\r\n\t\t\t<Row>\r\n\t\t\t\t<Col span={15}>\r\n\t\t\t\t\t<Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} items={items1} />\r\n\t\t\t\t</Col>\r\n\r\n\r\n\t\t\t\t\t\t{/*{user}*/}\r\n\t\t\t\t{!isAuth ?\r\n\t\t\t\t\t<Col span={6}>\r\n\t\t\t\t\t\t<button>\r\n\t\t\t\t\t\t\t<Link to={'/login'} title=\"Войти\"></Link>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Col span={2}>\r\n\t\t\t\t\t\t\t<Avatar alt={login || ''} style={{ backgroundColor: '#f56a00', verticalAlign: 'middle' }} icon={<UserOutlined />} size=\"large\"></Avatar>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col span={5}>\r\n\t\t\t\t\t\t\t<Button title=\"Выйти\" onClick={logoutCallback} ghost>Выйти</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\r\n\t\t\t</Row>\r\n\t\t</Header>\r\n\t);\r\n};\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {BrowserRouter, Link, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\n\r\nimport store, {AppStateType} from \"./redux/redux-store\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport News from \"./components/News/News\";\r\nimport {UsersPage} from \"./components/Users/UsersPage\";\r\nimport Spinner from \"./components/common/spinners/spinner\";\r\nimport type {MenuProps} from 'antd';\r\nimport {Breadcrumb, Layout, Menu} from \"antd\";\r\n\r\nimport {LaptopOutlined, NotificationOutlined, UserOutlined} from '@ant-design/icons';\r\nimport AppHeader from \"./components/Header/Header\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\r\nconst LoginPage = React.lazy(() => import(\"./Login/LoginPage\"));\r\n\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>;\r\ntype DispatchPropsType = {\r\n\tinitializeApp: () => void,\r\n};\r\n\r\nclass App extends React.Component<MapPropsType & DispatchPropsType> {\r\n\r\n\tcatchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\r\n\t\talert('какая-то ошибка');\r\n\t\tthrow e;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.initializeApp();\r\n\r\n\t\twindow.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tif (!this.props.initialized) {\r\n\t\t\treturn <Spinner />\r\n\t\t}\r\n\r\n\t\tconst { Content, Footer, Sider } = Layout;\r\n\r\n\t\tconst navLabels = [\r\n\t\t\t() => <Link to=\"/Profile\">Profile</Link>,\r\n\t\t\t() => <Link to=\"/Dialogs\">Messages</Link>,\r\n\t\t\t() => <Link to=\"/Users\">Users</Link>,\r\n\t\t\t() => <Link to=\"/News\">News</Link>,\r\n\t\t\t() => <Link to=\"/Music\">Music</Link>,\r\n\t\t\t() => <Link to=\"/Settings\">Settings</Link>,\r\n\t\t\t() => <Link to=\"/Login\">Login</Link>,\r\n\t\t];\r\n\r\n\t\tconst items2: MenuProps['items'] = [UserOutlined].map(\r\n\t\t\t(icon, index) => {\r\n\t\t\t\tconst key = String(index + 1);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tkey: `sub${key}`,\r\n\t\t\t\t\ticon: React.createElement(icon),\r\n\t\t\t\t\tlabel: `Открыть меню`,\r\n\r\n\t\t\t\t\tchildren: navLabels.map((item, j) => {\r\n\t\t\t\t\t\tconst subKey = index * 4 + j + 1;\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tkey: subKey,\r\n\t\t\t\t\t\t\tlabel: item(),\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}),\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t);\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t\t<AppHeader />\r\n\r\n\t\t\t\t<Content style={{ padding: '0 50px' }}>\r\n\r\n\t\t\t\t\t<Breadcrumb style={{ margin: '16px 0' }}>\r\n\t\t\t\t\t\t<Breadcrumb.Item>Home</Breadcrumb.Item>\r\n\t\t\t\t\t\t<Breadcrumb.Item>List</Breadcrumb.Item>\r\n\t\t\t\t\t\t<Breadcrumb.Item>App</Breadcrumb.Item>\r\n\t\t\t\t\t</Breadcrumb>\r\n\r\n\t\t\t\t\t<Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\r\n\r\n\t\t\t\t\t\t<Sider className=\"site-layout-background\" width={200}>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tmode=\"inline\"\r\n\t\t\t\t\t\t\t\tdefaultSelectedKeys={['1']}\r\n\t\t\t\t\t\t\t\tdefaultOpenKeys={['sub1']}\r\n\t\t\t\t\t\t\t\tstyle={{ height: '100%' }}\r\n\t\t\t\t\t\t\t\titems={items2}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Sider>\r\n\r\n\t\t\t\t\t\t<Content style={{ padding: '0 24px', minHeight: 280 }}>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Switch>\r\n\r\n\t\t\t\t\t\t\t\t<Route exact path='/' render={ () => <Redirect to={\"/profile\"} /> }/>\r\n\r\n\t\t\t\t\t\t\t\t<Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n\r\n\t\t\t\t\t\t\t\t<Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/>\r\n\r\n\t\t\t\t\t\t\t\t<Route path='/music' render={() => <Music/>}/>\r\n\t\t\t\t\t\t\t\t<Route path='/settings' render={() => <Settings/>}/>\r\n\t\t\t\t\t\t\t\t<Route path='/news' render={() => <News/>}/>\r\n\r\n\t\t\t\t\t\t\t\t<Route path='/users' render={() => <UsersPage pageTitle={'Самураи'} />}/>\r\n\r\n\t\t\t\t\t\t\t\t<Route path='/login' render={withSuspense(LoginPage)} />\r\n\r\n\t\t\t\t\t\t\t\t<Route path='*' render={ () => <div>404 Ошибка</div>} />\r\n\r\n\t\t\t\t\t\t\t</Switch>\r\n\r\n\t\t\t\t\t\t</Content>\r\n\t\t\t\t\t</Layout>\r\n\t\t\t\t</Content>\r\n\t\t\t\t<Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state:AppStateType) => {\r\n\treturn {\r\n\t\tinitialized: state.app.initialized,\r\n\t}\r\n};\r\n\r\nconst AppContainer = compose<React.ComponentType>(\r\n\twithRouter,\r\n\tconnect(mapStateToProps, {initializeApp})\r\n)(App);\r\n\r\nconst SamuraiJSApp:React.FC = () => {\r\n\treturn <BrowserRouter>\r\n\t\t<Provider store={store}>\r\n\t\t\t<AppContainer />\r\n\t\t</Provider>\r\n\t</BrowserRouter>;\r\n};\r\n\r\nexport default SamuraiJSApp;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<SamuraiJSApp />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__2Lp_Q\",\"paginationBtn\":\"Paginator_paginationBtn__56vVQ\",\"paginationBtn_prev\":\"Paginator_paginationBtn_prev__3jVQ4\",\"paginationBtn_next\":\"Paginator_paginationBtn_next__3fVyh\",\"paginationList\":\"Paginator_paginationList__12ONU\",\"paginationList_item\":\"Paginator_paginationList_item__3bk2c\",\"paginationList_item__active\":\"Paginator_paginationList_item__active__3w_kx\"};","import React from \"react\";\r\nimport s from \"./spinner.module.css\";\r\n\r\nconst Spinner:React.FC = () => {\r\n\treturn <div className={s.lds_ellipsis}>\r\n\t\t<div></div>\r\n\t\t<div></div>\r\n\t\t<div></div>\r\n\t\t<div></div>\r\n\t</div>\r\n};\r\n\r\nexport default Spinner;","import {instance} from \"./api\";\r\n\r\ntype CaptchaResponseType = {\r\n\turl:string\r\n};\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<CaptchaResponseType>(`/security/get-captcha-url`).then(response => response.data);\r\n    },\r\n};","import {instance, ResponseType, ResultCodesEnum} from \"./api\";\r\n\r\ntype MeResponseDataType = {\r\n\tid:number,\r\n\temail:string,\r\n\tlogin:string\r\n};\r\n\r\ntype LoginResponseDataType = {\r\n\tuserId:number,\r\n};\r\n\r\nexport const authAPI = {\r\n\tme(){\r\n\t\treturn instance.get<ResponseType<MeResponseDataType>>(`/auth/me`).then(response => response.data);\r\n\t},\r\n\tlogin(email:string, password:string, rememberMe=false, captcha:null|string=null){\r\n\t\tconst body = {\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\trememberMe,\r\n\t\t\tcaptcha,\r\n\t\t};\r\n\t\treturn instance.post<ResponseType<LoginResponseDataType>>(`/auth/login`, body).then(response => response.data);\r\n\t},\r\n\tlogout(){\r\n\t\treturn instance.delete(`/auth/login`).then(response => response.data);\r\n\t}\r\n};","import {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {securityAPI} from \"../api/SecurityAPI\";\r\nimport {ResultCodesEnum} from \"../api/api\";\r\nimport {authAPI} from \"../api/AuthAPI\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst initialState = {\r\n\tuserId: null as number | null,\r\n\temail: null as string | null,\r\n\tlogin: null as string | null,\r\n\tisAuth: false,\r\n\tcaptchaUrl: null as string | null, // if null, then captcha is not required\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\ntype ThunkType = BaseThunkType<ActionsTypes | ReturnType<typeof stopSubmit>>;\r\n\r\nconst authReducer = (state=initialState, action:ActionsTypes): InitialStateType => {\r\n\r\n\tswitch (action.type){\r\n\t\tcase \"SN/auth/SET_USER_DATA\":\r\n\t\tcase \"SN/auth/GET_CAPTCHA_URL_SUCCESS\" : {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t...action.payload\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\nexport const actions = {\r\n\tsetAuthUserData : (userId:number | null, email:string | null, login:string | null, isAuth:boolean) => ({\r\n\t\ttype: \"SN/auth/SET_USER_DATA\",\r\n\t\tpayload: {\r\n\t\t\tuserId,\r\n\t\t\temail,\r\n\t\t\tlogin,\r\n\t\t\tisAuth,\r\n\t\t}\r\n\t} as const),\r\n\r\n\tgetCaptchaUrlSuccess : (captchaUrl: string) => ({\r\n\t\ttype: \"SN/auth/GET_CAPTCHA_URL_SUCCESS\",\r\n\t\tpayload: {captchaUrl},\r\n\t} as const),\r\n};\r\n\r\n\r\n\r\n\r\nexport const getAuthUserData = ():ThunkType =>  async (dispatch) => {\r\n\tconst meData = await authAPI.me();\r\n\r\n\tif (meData.resultCode === ResultCodesEnum.Success){\r\n\t\tconst {id, email, login} = meData.data;\r\n\t\tdispatch(actions.setAuthUserData(id, email, login, true));\r\n\t}\r\n};\r\n\r\nexport const login = (email:string,\r\n\t\t\t\t\t\t\t\t\t\t\tpassword:string,\r\n\t\t\t\t\t\t\t\t\t\t\trememberMe:boolean,\r\n\t\t\t\t\t\t\t\t\t\t\tcaptcha:string):ThunkType => async (dispatch) => {\r\n\r\n\tconst data = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n\tif (data.resultCode === ResultCodesEnum.Success){\r\n\t\tdispatch(getAuthUserData());\r\n\r\n\t} else {\r\n\r\n\t\tif (data.resultCode === ResultCodesEnum.captchaErrorOccured) {\r\n\t\t\tdispatch(getCaptchaUrl());\r\n\t\t}\r\n\r\n\t\t// stopSubmit - для обработки ошибок\r\n\t\tconst message:string = data.messages.length > 0 ? data.messages[0] : \"какая-то ошибка\";\r\n\t\tconst action:any = stopSubmit(\"login\", {_error: message});\r\n\r\n\t\tdispatch(action);\r\n\t}\r\n};\r\n\r\nexport const getCaptchaUrl = ():ThunkType => async (dispatch) => {\r\n\tconst data = await securityAPI.getCaptchaUrl();\r\n\r\n\tdispatch( actions.getCaptchaUrlSuccess(data.url) );\r\n};\r\n\r\nexport const logout = ():ThunkType => async (dispatch ) => {\r\n\tconst data = await authAPI.logout();\r\n\r\n\tif (data.resultCode === ResultCodesEnum.Success){\r\n\t\tdispatch(actions.setAuthUserData(null, null, null, true));\r\n\t}\r\n};\r\n\r\n\r\nexport default authReducer;"],"sourceRoot":""}